@inherits LayoutComponentBase

<script src="js/bundle.js"></script>
<link href="css/theme.@(_theme).css" rel="stylesheet" />
<div id="loading" class="@(_pageLoaded)"><div class="loading-text">JBM DEV</div></div>
<div id="layout" class="page">
    <NavMenu SwitchTheme="@SwitchTheme" GetThemeVilibility="@GetThemeVilibility" />

    <main>
        <div class="container">
            @Body
        </div>
    </main>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
</div>

@code {
    private MainLayout.Themes _theme = MainLayout.Themes.light;
    private string _pageLoaded = "";
    private static MainLayout? _navMenu;

    public enum Themes
    {
        light,
        dark
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _navMenu = this;
            _theme = await Js.InvokeAsync<string>("loadTheme") == "light" ? MainLayout.Themes.light : MainLayout.Themes.dark;
            _pageLoaded = "hide";
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private string GetThemeVilibility(MainLayout.Themes theme) => theme == _theme ? "hidden" : "";

    private void SetTheme(MainLayout.Themes theme)
    {
        _theme = theme;
        StateHasChanged();
    }

    private async Task SwitchTheme()
    {
        _theme = _theme switch
        {
            MainLayout.Themes.dark => MainLayout.Themes.light,
            MainLayout.Themes.light => MainLayout.Themes.dark,
            _ => throw new Exception("Thème non pris en charge")
        };
        await Js.InvokeVoidAsync("switchTheme");
    }

    [JSInvokable]
    public static void SetThemeFromJS(string theme)
    {
        _navMenu!.SetTheme(theme == "dark" ? MainLayout.Themes.dark : MainLayout.Themes.light);
    }
}